{"version":3,"file":"static/js/753.f4f737b5.chunk.js","mappings":"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","sources":["API.jsx","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","pages/Home/Home.styled.js","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '592f788186491be4ee714869feb8dcec';\nconst URL = 'https://api.themoviedb.org/3/';\naxios.defaults.baseURL = URL;\n\n// запит на фільми в тренді\n\nexport const getTrendingMovies = async () => {\n  try {\n    const fetchTrendingMovies = await axios.get(\n      `trending/movie/day?api_key=${KEY}`\n    );\n\n    return await fetchTrendingMovies.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// запит на фільм по id\n\n//api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\n\nexport const getMovieById = async id => {\n  try {\n    const fetchMovieById = await axios.get(\n      `movie/${id}?api_key=${KEY}&language=en-US`\n    );\n\n    return await fetchMovieById.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// пошук фільмів\n\nexport const getMovieByName = async name => {\n  try {\n    const fetchMovieByName = await axios.get(\n      `search/movie/?api_key=${KEY}&language=en-US&query=${name}&page=1&include_adult=false`\n    );\n    return await fetchMovieByName.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// запит акторів\n\nexport const getActors = async id => {\n  try {\n    const fetchActors = await axios.get(\n      `movie/${id}/credits?api_key=${KEY}&language=en-US`\n    );\n\n    return await fetchActors.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// запит відгуків\n\nexport const getReviews = async id => {\n  try {\n    const fetchReviews = await axios.get(\n      `movie/${id}/reviews?api_key=${KEY}&language=en-US`\n    );\n\n    return await fetchReviews.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import styled from 'styled-components';\n\nexport const LoaderWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 100px;\n`;\n","import { Circles } from 'react-loader-spinner';\n\nimport { LoaderWrap } from './Loader.styled.js';\n\nexport function Loader() {\n  return (\n    <>\n      <LoaderWrap>\n        <Circles\n          height=\"80\"\n          width=\"80\"\n          color=\"#4fa94d\"\n          ariaLabel=\"circles-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"\"\n          visible={true}\n        />\n        ;\n      </LoaderWrap>\n    </>\n  );\n}\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  gap: 30px;\n`;\n\nconst Item = styled.li`\n  background-color: #000;\n\n  &:hover {\n    box-shadow: 0px 0px 7px 6px rgb(53 100 39);\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  color: #ffffff;\n`;\n\nconst MovieInfoWrap = styled.div`\n  background-color: #000;\n  padding-bottom: 10px;\n`;\n\nconst MovieInfo = styled.p`\n  display: block;\n  font-size: 20px;\n  font-weight: 400;\n  text-align: center;\n  padding-top: 10px;\n`;\nexport { List, Item, StyledLink, MovieInfoWrap, MovieInfo };\n","import PropTypes from 'prop-types';\nimport {\n  List,\n  StyledLink,\n  Item,\n  MovieInfoWrap,\n  MovieInfo,\n} from './MovieList.styled.js';\nimport defaultImg from '../../img/poster-default.jpg';\n\nexport const MovieList = ({ movies, state }) => {\n  return (\n    <>\n      <List>\n        {movies.map(({ id, poster_path, title, release_date }) => {\n          const date = release_date.slice(0, 4);\n          return (\n            <Item key={id}>\n              <StyledLink to={`/movies/${id}`} state={state}>\n                <MovieInfoWrap>\n                  <img\n                    src={\n                      poster_path\n                        ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                        : defaultImg\n                    }\n                    alt={title}\n                  />\n                  <MovieInfo>\"{title}\"</MovieInfo>\n                  <MovieInfo>{date}</MovieInfo>\n                </MovieInfoWrap>\n              </StyledLink>\n            </Item>\n          );\n        })}\n      </List>\n    </>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.array,\n  state: PropTypes.object,\n};\n","import styled from 'styled-components';\n\nconst Section = styled.section`\n  /* position: relative; */\n  padding: 30px 15px;\n  max-width: 1320px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Heading = styled.h1`\n  font-size: 36px;\n  text-align: center;\n  color: #c5ecc5;\n  margin-bottom: 50px;\n`;\n\nexport { Heading, Section };\n","import styled from 'styled-components';\n\nconst Form = styled.form`\n  display: flex;\n  justify-content: center;\n  gap: 30px;\n  margin-bottom: 30px;\n`;\n\nconst Input = styled.input`\n  width: 400px;\n  padding: 10px;\n  font-weight: 500;\n  background-color: #242227;\n  border: 1px solid green;\n  color: #ffffff;\n  transition: outline 300ms ease;\n\n  &:focus,\n  &:hover {\n    outline: 2px solid #59ff1b;\n  }\n\n  &::placeholder {\n    color: #ffffff;\n  }\n`;\n\nconst SearchBtn = styled.button`\n  background-color: #067c11;\n  padding: 10px 30px;\n  border: 1px solid #067c11;\n  color: #ffffff;\n  font-size: 20px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: background-colo 300ms ease;\n\n  &:focus,\n  &:hover {\n    background-color: #379d10;\n  }\n`;\n\nexport { Form, Input, SearchBtn };\n","import PropTypes from 'prop-types';\nimport { Form, Input, SearchBtn } from './SearchForm.styled.js';\n\nexport const SearchForm = ({ updateQuery }) => {\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const inputValue = evt.currentTarget.elements.inputValue.value;\n\n    if (inputValue === '') {\n      return;\n    }\n\n    updateQuery(inputValue);\n    evt.currentTarget.reset();\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <Input type=\"text\" name=\"inputValue\" placeholder=\"Enter movie name\" />\n        <SearchBtn type=\"submit\">Search</SearchBtn>\n      </Form>\n    </>\n  );\n};\n\nSearchForm.propTypes = {\n  updateQuery: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { getMovieByName } from '../../API';\nimport { SearchForm } from '../../components/SearchForm/SearchForm';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { Section } from 'pages/Home/Home.styled';\nimport { Loader } from '../../components/Loader/Loader';\n\nexport default function Movies() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    const movieName = searchParams.get('query');\n\n    if (!movieName) {\n      return;\n    }\n\n    (async function fetchMovieByName() {\n      try {\n        setIsLoading(true);\n        const moviesByName = await getMovieByName(movieName);\n        console.log(movieName);\n        console.log(moviesByName);\n        console.log(moviesByName.results);\n        setMovies(moviesByName.results);\n        setIsLoading(false);\n      } catch (error) {\n        console.log(error);\n        console.log(error.message);\n      }\n    })();\n  }, [searchParams]);\n\n  const updateQuery = inputValue => {\n    setSearchParams({ query: inputValue });\n  };\n\n  return (\n    <>\n      <main>\n        <Section>\n          <SearchForm updateQuery={updateQuery} />\n          {isLoading && <Loader />}\n          {movies.length > 0 && (\n            <div>\n              <MovieList movies={movies} state={{ from: location }} />\n            </div>\n          )}\n        </Section>\n      </main>\n    </>\n  );\n}\n"],"names":["KEY","axios","getTrendingMovies","fetchTrendingMovies","data","results","console","log","getMovieById","id","fetchMovieById","getMovieByName","name","fetchMovieByName","getActors","fetchActors","cast","getReviews","fetchReviews","LoaderWrap","styled","Loader","height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible","List","Item","StyledLink","Link","MovieInfoWrap","MovieInfo","MovieList","movies","state","map","poster_path","title","date","release_date","slice","to","src","defaultImg","alt","Section","Heading","Form","Input","SearchBtn","SearchForm","updateQuery","onSubmit","evt","preventDefault","inputValue","currentTarget","elements","value","reset","type","placeholder","Movies","useSearchParams","searchParams","setSearchParams","useState","setMovies","isLoading","setIsLoading","location","useLocation","useEffect","movieName","get","moviesByName","message","query","length","from"],"sourceRoot":""}