{"version":3,"file":"static/js/387.a45f58d6.chunk.js","mappings":"mTAEMA,EAAM,mCAEZC,EAAAA,GAAAA,SAAAA,QADY,gCAKL,IAAMC,EAAiB,mCAAG,6GAEKD,EAAAA,GAAAA,IAAA,qCACFD,IAHH,cAEvBG,EAFuB,gBAMhBA,EAAoBC,KAAKC,QANT,wEAQ7BC,QAAQC,IAAR,MAR6B,yDAAH,qDAgBjBC,EAAY,mCAAG,WAAMC,GAAN,gGAEKR,EAAAA,GAAAA,IAAA,gBAClBQ,EADkB,oBACJT,EADI,oBAFL,cAElBU,EAFkB,gBAMXA,EAAeN,KANJ,wEAQxBE,QAAQC,IAAR,MARwB,yDAAH,sDAcZI,EAAc,mCAAG,WAAMC,GAAN,gGAEKX,EAAAA,GAAAA,IAAA,gCACJD,EADI,iCACwBY,EADxB,gCAFL,cAEpBC,EAFoB,gBAKbA,EAAiBT,KALJ,wEAO1BE,QAAQC,IAAR,MAP0B,yDAAH,sDAadO,EAAS,mCAAG,WAAML,GAAN,gGAEKR,EAAAA,GAAAA,IAAA,gBACfQ,EADe,4BACOT,EADP,oBAFL,cAEfe,EAFe,gBAMRA,EAAYX,KAAKY,KANT,wEAQrBV,QAAQC,IAAR,MARqB,yDAAH,sDAcTU,EAAU,mCAAG,WAAMR,GAAN,gGAEKR,EAAAA,GAAAA,IAAA,gBAChBQ,EADgB,4BACMT,EADN,oBAFL,cAEhBkB,EAFgB,gBAMTA,EAAad,KAAKC,QANT,wEAQtBC,QAAQC,IAAR,MARsB,yDAAH,qD,6LC/DjBY,EAASC,EAAAA,GAAAA,GAAH,4IAQNC,EAAWD,EAAAA,GAAAA,GAAH,4EAMRE,EAAOF,EAAAA,GAAAA,GAAH,2DAKJG,EAAYH,EAAAA,GAAAA,EAAH,mIAQTI,EAAgBJ,EAAAA,GAAAA,EAAH,kE,mBCdJ,SAASK,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAgCE,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAeA,OAbAC,EAAAA,EAAAA,YAAU,YACR,mCAAC,2FACCD,GAAa,GADd,mBAG4BlB,EAAAA,EAAAA,IAAUY,GAHtC,OAGSQ,EAHT,OAIGJ,EAAYI,GACZF,GAAa,GALhB,gDAOG1B,QAAQC,IAAI,KAAM4B,SAPrB,yDAAD,sDAUD,GAAE,CAACT,KAGF,UAAC,IAAD,WACGK,IAAa,SAACK,EAAA,EAAD,KACZL,GAAaF,EAASQ,OAAS,IAC/B,iCACE,SAAClB,EAAD,oBACA,SAACE,EAAD,UACGQ,EAASS,KAAI,YAA4C,IAAzC7B,EAAwC,EAAxCA,GAAIG,EAAoC,EAApCA,KAAM2B,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aACpC,OACE,UAAClB,EAAD,YACE,gBACEmB,IACED,EAAY,6CAC8BA,GACtCE,EAENC,IAAG,UAAK/B,GACRgC,MAAM,SAGR,SAACrB,EAAD,UAAYX,KACZ,SAACY,EAAD,UAAgBe,MAZP9B,EAed,WAMZ,C,gFC7DYoC,E,QAAazB,GAAAA,IAAH,4F,SCEhB,SAASgB,IACd,OACE,+BACE,UAACS,EAAD,YACE,SAAC,KAAD,CACEC,OAAO,KACPF,MAAM,KACNG,MAAM,UACNC,UAAU,kBACVC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,IARb,QAcL,C,yGCnBKC,EAAUhC,EAAAA,GAAAA,QAAH,+IAQPiC,EAAUjC,EAAAA,GAAAA,GAAH,6G","sources":["API.jsx","components/Cast/Cast.styled.js","components/Cast/Cast.jsx","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","pages/Home/Home.styled.js"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '592f788186491be4ee714869feb8dcec';\nconst URL = 'https://api.themoviedb.org/3/';\naxios.defaults.baseURL = URL;\n\n// запит на фільми в тренді\n\nexport const getTrendingMovies = async () => {\n  try {\n    const fetchTrendingMovies = await axios.get(\n      `trending/movie/day?api_key=${KEY}`\n    );\n\n    return await fetchTrendingMovies.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// запит на фільм по id\n\n//api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\n\nexport const getMovieById = async id => {\n  try {\n    const fetchMovieById = await axios.get(\n      `movie/${id}?api_key=${KEY}&language=en-US`\n    );\n\n    return await fetchMovieById.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// пошук фільмів\n\nexport const getMovieByName = async name => {\n  try {\n    const fetchMovieByName = await axios.get(\n      `search/movie/?api_key=${KEY}&language=en-US&query=${name}&page=1&include_adult=false`\n    );\n    return await fetchMovieByName.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// запит акторів\n\nexport const getActors = async id => {\n  try {\n    const fetchActors = await axios.get(\n      `movie/${id}/credits?api_key=${KEY}&language=en-US`\n    );\n\n    return await fetchActors.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// запит відгуків\n\nexport const getReviews = async id => {\n  try {\n    const fetchReviews = await axios.get(\n      `movie/${id}/reviews?api_key=${KEY}&language=en-US`\n    );\n\n    return await fetchReviews.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import styled from 'styled-components';\n\nconst Heding = styled.h3`\n  font-size: 30px;\n  text-transform: uppercase;\n  color: #7cfd82;\n  text-align: center;\n  margin-bottom: 40px;\n`;\n\nconst CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px;\n`;\n\nconst Item = styled.li`\n  width: 150px;\n  height: 305px;\n`;\n\nconst InfoActor = styled.p`\n  text-align: center;\n  color: #7cfd82;\n  font-size: 18px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n`;\n\nconst InfoCharacter = styled.p`\n  text-align: center;\n  color: #999973;\n`;\n\nexport { Heding, CastList, Item, InfoActor, InfoCharacter };\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getActors } from '../../API';\nimport { Section } from '../../pages/Home/Home.styled.js';\nimport { Loader } from '../../components/Loader/Loader';\n\nimport {\n  Heding,\n  CastList,\n  Item,\n  InfoActor,\n  InfoCharacter,\n} from './Cast.styled.js';\nimport defaultImg from '../../img/anonymous.jpg';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [castList, setCastList] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    (async function fetchActors() {\n      setIsLoading(true);\n      try {\n        const movieCasts = await getActors(movieId);\n        setCastList(movieCasts);\n        setIsLoading(false);\n      } catch (error) {\n        console.log(error.message);\n      }\n    })();\n  }, [movieId]);\n\n  return (\n    <Section>\n      {isLoading && <Loader />}\n      {!isLoading && castList.length > 0 && (\n        <>\n          <Heding>Cast</Heding>\n          <CastList>\n            {castList.map(({ id, name, character, profile_path }) => {\n              return (\n                <Item key={id}>\n                  <img\n                    src={\n                      profile_path\n                        ? `https://image.tmdb.org/t/p/original${profile_path}`\n                        : defaultImg\n                    }\n                    alt={`${name}`}\n                    width=\"150\"\n                  />\n\n                  <InfoActor>{name}</InfoActor>\n                  <InfoCharacter>{character}</InfoCharacter>\n                </Item>\n              );\n            })}\n          </CastList>\n        </>\n      )}\n    </Section>\n  );\n}\n","import styled from 'styled-components';\n\nexport const LoaderWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 100px;\n`;\n","import { Circles } from 'react-loader-spinner';\n\nimport { LoaderWrap } from './Loader.styled.js';\n\nexport function Loader() {\n  return (\n    <>\n      <LoaderWrap>\n        <Circles\n          height=\"80\"\n          width=\"80\"\n          color=\"#4fa94d\"\n          ariaLabel=\"circles-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"\"\n          visible={true}\n        />\n        ;\n      </LoaderWrap>\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nconst Section = styled.section`\n  /* position: relative; */\n  padding: 30px 15px;\n  max-width: 1320px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Heading = styled.h1`\n  font-size: 36px;\n  text-align: center;\n  color: #c5ecc5;\n  margin-bottom: 50px;\n`;\n\nexport { Heading, Section };\n"],"names":["KEY","axios","getTrendingMovies","fetchTrendingMovies","data","results","console","log","getMovieById","id","fetchMovieById","getMovieByName","name","fetchMovieByName","getActors","fetchActors","cast","getReviews","fetchReviews","Heding","styled","CastList","Item","InfoActor","InfoCharacter","Cast","movieId","useParams","useState","castList","setCastList","isLoading","setIsLoading","useEffect","movieCasts","message","Loader","length","map","character","profile_path","src","defaultImg","alt","width","LoaderWrap","height","color","ariaLabel","wrapperStyle","wrapperClass","visible","Section","Heading"],"sourceRoot":""}