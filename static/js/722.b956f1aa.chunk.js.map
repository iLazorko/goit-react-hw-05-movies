{"version":3,"file":"static/js/722.b956f1aa.chunk.js","mappings":"mTAEMA,EAAM,mCAEZC,EAAAA,GAAAA,SAAAA,QADY,gCAKL,IAAMC,EAAiB,mCAAG,6GAEKD,EAAAA,GAAAA,IAAA,qCACFD,IAHH,cAEvBG,EAFuB,gBAMhBA,EAAoBC,KAAKC,QANT,wEAQ7BC,QAAQC,IAAR,MAR6B,yDAAH,qDAgBjBC,EAAY,mCAAG,WAAMC,GAAN,gGAEKR,EAAAA,GAAAA,IAAA,gBAClBQ,EADkB,oBACJT,EADI,oBAFL,cAElBU,EAFkB,gBAMXA,EAAeN,KANJ,wEAQxBE,QAAQC,IAAR,MARwB,yDAAH,sDAcZI,EAAc,mCAAG,WAAMC,GAAN,gGAEKX,EAAAA,GAAAA,IAAA,gCACJD,EADI,iCACwBY,EADxB,gCAFL,cAEpBC,EAFoB,OAK1BP,QAAQC,IAAIK,GACZN,QAAQC,IAAIM,EAAiBT,MANH,SAQbS,EAAiBT,KARJ,0EAU1BE,QAAQC,IAAR,MAV0B,0DAAH,sDAgBdO,EAAS,mCAAG,WAAML,GAAN,gGAEKR,EAAAA,GAAAA,IAAA,gBACfQ,EADe,4BACOT,EADP,oBAFL,cAEfe,EAFe,gBAMRA,EAAYX,KAAKY,KANT,wEAQrBV,QAAQC,IAAR,MARqB,yDAAH,sDAcTU,EAAU,mCAAG,WAAMR,GAAN,gGAEKR,EAAAA,GAAAA,IAAA,gBAChBQ,EADgB,4BACMT,EADN,oBAFL,cAEhBkB,EAFgB,gBAMTA,EAAad,KAAKC,QANT,wEAQtBC,QAAQC,IAAR,MARsB,yDAAH,qD,gFClEVY,E,QAAaC,GAAAA,IAAH,4F,SCEhB,SAASC,IACd,OACE,+BACE,UAACF,EAAD,YACE,SAAC,KAAD,CACEG,OAAO,KACPC,MAAM,KACNC,MAAM,UACNC,UAAU,kBACVC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,IARb,QAcL,C,yGCnBKC,EAAUT,EAAAA,GAAAA,QAAH,+IAQPU,EAAUV,EAAAA,GAAAA,GAAH,6G,2MCPPW,EAAYX,EAAAA,GAAAA,IAAH,+FAOTY,EAAgBZ,EAAAA,GAAAA,IAAH,kJASba,EAAQb,EAAAA,GAAAA,GAAH,+DAKLc,EAAYd,EAAAA,GAAAA,KAAH,2CAITe,EAAUf,EAAAA,GAAAA,GAAH,+NAaPgB,EAAOhB,EAAAA,GAAAA,GAAH,8NAcJiB,GAAajB,EAAAA,EAAAA,IAAOkB,EAAAA,GAAPlB,CAAH,yF,mBCzCHmB,EAAe,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACrBC,EACND,EADMC,MAAOC,EACbF,EADaE,YAAaC,EAC1BH,EAD0BG,SAAUC,EACpCJ,EADoCI,aAAcC,EAClDL,EADkDK,aAAcC,EAChEN,EADgEM,OAE5DC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,+BACE,UAACjB,EAAD,YACE,gBACEkB,IACEP,EAAW,6CAC+BA,GACtCQ,EAENC,IAAG,UAAKV,GACRlB,MAAM,SAER,UAACS,EAAD,YACE,SAACC,EAAD,UAAQQ,KACR,0BACE,SAACP,EAAD,WACE,wCAEDS,MAEH,0BACE,SAACT,EAAD,WACE,sCAFJ,OAIGY,QAJH,IAIGA,OAJH,EAIGA,EACGM,KAAI,YACJ,OADkB,EAAXxC,IAER,IACAyC,KAAK,UAEV,0BACE,SAACnB,EAAD,WACE,4CAEDU,MAEH,0BACE,SAACV,EAAD,WACE,4CAEDW,SAGL,UAACV,EAAD,YACE,SAACC,EAAD,WACE,SAACC,EAAD,CAAYiB,GAAG,OAAOC,MAAO,CAAEC,KAAMT,EAASQ,MAAMC,MAApD,qBAIF,SAACpB,EAAD,WACE,SAACC,EAAD,CAAYiB,GAAG,UAAUC,MAAO,CAAEC,KAAMT,EAASQ,MAAMC,MAAvD,8BAQX,E,UCrEc,SAASC,IAAa,IAAD,IAClC,GAA0BC,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOlB,EAAP,KAAcmB,EAAd,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAGFE,EAAY,qBAFDhB,EAAAA,EAAAA,MAEaO,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAgB7C,IAdAS,EAAAA,EAAAA,YAAU,YACR,mCAAC,2FACCJ,GAAa,GADd,mBAG2BrD,EAAAA,EAAAA,IAAasD,GAHxC,OAGSI,EAHT,OAKGP,EAASO,GACTL,GAAa,GANhB,gDAQGvD,QAAQC,IAAI,KAAM4D,SARrB,yDAAD,sDAWD,GAAE,CAACL,IAECtB,EAIL,OACE,4BACGoB,IAAa,SAACvC,EAAA,EAAD,KACZuC,IACA,UAAC,IAAD,YACE,SAAC,IAAD,CAAUN,GAAIU,EAAd,sBACA,SAACzB,EAAD,CAAcC,MAAOA,QAGzB,SAAC,EAAA4B,SAAD,CAAUC,UAAU,SAAChD,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,QAIP,C,0FC7CKiD,GAAWlD,EAAAA,EAAAA,IAAOkB,EAAAA,GAAPlB,CAAH,oe","sources":["API.jsx","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","pages/Home/Home.styled.js","components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.jsx","pages/MovieInfo/MovieInfo.jsx","pages/MovieInfo/MovieInfo.styled.js"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '592f788186491be4ee714869feb8dcec';\nconst URL = 'https://api.themoviedb.org/3/';\naxios.defaults.baseURL = URL;\n\n// запит на фільми в тренді\n\nexport const getTrendingMovies = async () => {\n  try {\n    const fetchTrendingMovies = await axios.get(\n      `trending/movie/day?api_key=${KEY}`\n    );\n\n    return await fetchTrendingMovies.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// запит на фільм по id\n\n//api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\n\nexport const getMovieById = async id => {\n  try {\n    const fetchMovieById = await axios.get(\n      `movie/${id}?api_key=${KEY}&language=en-US`\n    );\n\n    return await fetchMovieById.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// пошук фільмів\n\nexport const getMovieByName = async name => {\n  try {\n    const fetchMovieByName = await axios.get(\n      `search/movie/?api_key=${KEY}&language=en-US&query=${name}&page=1&include_adult=false`\n    );\n    console.log(name);\n    console.log(fetchMovieByName.data);\n\n    return await fetchMovieByName.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// запит акторів\n\nexport const getActors = async id => {\n  try {\n    const fetchActors = await axios.get(\n      `movie/${id}/credits?api_key=${KEY}&language=en-US`\n    );\n\n    return await fetchActors.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// запит відгуків\n\nexport const getReviews = async id => {\n  try {\n    const fetchReviews = await axios.get(\n      `movie/${id}/reviews?api_key=${KEY}&language=en-US`\n    );\n\n    return await fetchReviews.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import styled from 'styled-components';\n\nexport const LoaderWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 100px;\n`;\n","import { Circles } from 'react-loader-spinner';\n\nimport { LoaderWrap } from './Loader.styled.js';\n\nexport function Loader() {\n  return (\n    <>\n      <LoaderWrap>\n        <Circles\n          height=\"80\"\n          width=\"80\"\n          color=\"#4fa94d\"\n          ariaLabel=\"circles-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"\"\n          visible={true}\n        />\n        ;\n      </LoaderWrap>\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nconst Section = styled.section`\n  /* position: relative; */\n  padding: 30px 15px;\n  max-width: 1320px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Heading = styled.h1`\n  font-size: 36px;\n  text-align: center;\n  color: #c5ecc5;\n  margin-bottom: 50px;\n`;\n\nexport { Heading, Section };\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst MovieWrap = styled.div`\n  position: relative;\n  display: flex;\n  color: #fff;\n  gap: 40px;\n`;\n\nconst MovieInfoWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n  font-size: 20px;\n  padding-top: 30px;\n  line-height: 1.7;\n`;\n\nconst Title = styled.h2`\n  font-size: 30px;\n  color: #dbe395;\n`;\n\nconst InfoTitle = styled.span`\n  color: #727272;\n`;\n\nconst Wrapper = styled.ul`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 300px;\n  height: 60px;\n  background-color: #000000ab;\n`;\n\nconst Item = styled.li`\n  padding: 8px;\n  background-color: #067c11;\n  width: 100px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  &:hover,\n  &:focus {\n    background-color: #3eb810;\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  color: #ffffff;\n  font-size: 18px;\n  text-decoration: none;\n`;\n\nexport {\n  MovieWrap,\n  MovieInfoWrap,\n  InfoTitle,\n  Title,\n  Wrapper,\n  StyledLink,\n  Item,\n};\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  MovieWrap,\n  MovieInfoWrap,\n  Title,\n  InfoTitle,\n  Wrapper,\n  Item,\n  StyledLink,\n} from './MovieDetails.styled.js';\n\nimport defaultImg from '../../img/poster-movie.jpg';\n\nexport const MovieDetails = ({ movie }) => {\n  const { title, poster_path, overview, release_date, vote_average, genres } =\n    movie;\n  const location = useLocation();\n\n  return (\n    <>\n      <MovieWrap>\n        <img\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/original${poster_path}`\n              : defaultImg\n          }\n          alt={`${title}`}\n          width=\"300\"\n        />\n        <MovieInfoWrap>\n          <Title>{title}</Title>\n          <p>\n            <InfoTitle>\n              <b>Overview: </b>\n            </InfoTitle>\n            {overview}\n          </p>\n          <p>\n            <InfoTitle>\n              <b>Genres: </b>\n            </InfoTitle>\n            {genres\n              ?.map(({ name }) => {\n                return name;\n              })\n              .join(', ')}\n          </p>\n          <p>\n            <InfoTitle>\n              <b>Release date: </b>\n            </InfoTitle>\n            {release_date}\n          </p>\n          <p>\n            <InfoTitle>\n              <b>Vote average: </b>\n            </InfoTitle>\n            {vote_average}\n          </p>\n        </MovieInfoWrap>\n        <Wrapper>\n          <Item>\n            <StyledLink to=\"cast\" state={{ from: location.state.from }}>\n              Cast\n            </StyledLink>\n          </Item>\n          <Item>\n            <StyledLink to=\"reviews\" state={{ from: location.state.from }}>\n              Reviews\n            </StyledLink>\n          </Item>\n        </Wrapper>\n      </MovieWrap>\n    </>\n  );\n};\n\nMovieDetails.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string,\n    title: PropTypes.string,\n    overview: PropTypes.string,\n    release_date: PropTypes.string,\n    vote_average: PropTypes.number,\n    genres: PropTypes.array,\n  }).isRequired,\n};\n","import { useParams, useLocation, Outlet } from 'react-router-dom';\nimport { Suspense, useState, useEffect } from 'react';\nimport { getMovieById } from '../../API';\nimport { Loader } from '../../components/Loader/Loader';\nimport { Section } from '../Home/Home.styled.js';\nimport { MovieDetails } from '../../components/MovieDetails/MovieDetails';\nimport { BackLink } from './MovieInfo.styled.js';\n\nexport default function MovieInfo() {\n  const [movie, setMovie] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    (async function fetchMovieById() {\n      setIsLoading(true);\n      try {\n        const movieById = await getMovieById(movieId);\n\n        setMovie(movieById);\n        setIsLoading(false);\n      } catch (error) {\n        console.log(error.message);\n      }\n    })();\n  }, [movieId]);\n\n  if (!movie) {\n    return;\n  }\n\n  return (\n    <main>\n      {isLoading && <Loader />}\n      {!isLoading && (\n        <Section>\n          <BackLink to={backLinkHref}>Go back</BackLink>\n          <MovieDetails movie={movie} />\n        </Section>\n      )}\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n}\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst BackLink = styled(Link)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100px;\n  padding: 8px;\n  margin-bottom: 30px;\n  font-size: 16px;\n  font-weight: 700;\n  text-decoration: none;\n  background-color: transparent;\n  color: #be7474;\n  border: 1px solid;\n  border-color: #be7474;\n\n  transform: scale(1);\n  transition: color 300ms ease, border-color 300ms ease;\n\n  &:hover,\n  &:focus {\n    color: #f7bfbf;\n    border-color: #f7bfbf;\n  }\n`;\n\nexport { BackLink };\n"],"names":["KEY","axios","getTrendingMovies","fetchTrendingMovies","data","results","console","log","getMovieById","id","fetchMovieById","getMovieByName","name","fetchMovieByName","getActors","fetchActors","cast","getReviews","fetchReviews","LoaderWrap","styled","Loader","height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible","Section","Heading","MovieWrap","MovieInfoWrap","Title","InfoTitle","Wrapper","Item","StyledLink","Link","MovieDetails","movie","title","poster_path","overview","release_date","vote_average","genres","location","useLocation","src","defaultImg","alt","map","join","to","state","from","MovieInfo","useState","setMovie","isLoading","setIsLoading","movieId","useParams","backLinkHref","useEffect","movieById","message","Suspense","fallback","BackLink"],"sourceRoot":""}